"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.testGenerate = void 0;
const fs_1 = require("fs");
const path_1 = __importDefault(require("path"));
const os_1 = require("os");
const process_1 = require("process");
const rimraf_1 = __importDefault(require("rimraf"));
function rimrafPromise(path, options) {
    return new Promise(function (resolve, reject) {
        (0, rimraf_1.default)(path, options || {}, function (error) {
            if (error) {
                reject(error);
            }
            else {
                resolve();
            }
        });
    });
}
/**
 * Generate the templates for the `CodegenResult` and call `func` to test them.
 * @param result a `CodegenResult` from `createCodegenResult`
 * @param options options for the test
 */
async function testGenerate(result, options) {
    const { testName, postProcess, clean } = options;
    const outputPath = path_1.default.join((0, os_1.tmpdir)(), 'openapi-generator-plus-generators', path_1.default.basename((0, process_1.cwd)()), testName);
    /* Clean the output first */
    if (clean !== false) {
        await rimrafPromise(outputPath, { disableGlob: true });
    }
    await fs_1.promises.mkdir(outputPath, { recursive: true });
    await result.state.generator.exportTemplates(outputPath, result.doc);
    if (postProcess) {
        await postProcess(outputPath);
    }
}
exports.testGenerate = testGenerate;
