"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.configObject = exports.configNumber = exports.configBoolean = exports.nullableConfigBoolean = exports.configStringArray = exports.configString = exports.nullableConfigString = void 0;
/**
 * Extract a config string that may be explicitly set to null, but has a non-null default value.
 */
function nullableConfigString(config, key, defaultValue, path = '') {
    const value = config[key];
    if (value === null) {
        return null;
    }
    return configString(config, key, defaultValue, path);
}
exports.nullableConfigString = nullableConfigString;
function configString(config, key, defaultValue, path = '') {
    const value = config[key];
    if (value === null || value === undefined) {
        return defaultValue;
    }
    if (typeof value !== 'string') {
        throw new Error(`Unexpected value of type "${typeof value}" for config key "${path}${key}"`);
    }
    return value;
}
exports.configString = configString;
function configStringArray(config, key, defaultValue, path = '') {
    const value = config[key];
    if (value === null || value === undefined) {
        return defaultValue;
    }
    if (!Array.isArray(value)) {
        throw new Error(`Unexpected value of type "${typeof value}" for config key "${path}${key}"`);
    }
    for (let i = 0; i < value.length; i++) {
        if (typeof value[i] !== 'string') {
            throw new Error(`Unexpected value of type "${typeof value}" for config key "${path}${key}[${i}]"`);
        }
    }
    return value;
}
exports.configStringArray = configStringArray;
function nullableConfigBoolean(config, key, defaultValue, path = '') {
    const value = config[key];
    if (value === null) {
        return null;
    }
    return configBoolean(config, key, defaultValue, path);
}
exports.nullableConfigBoolean = nullableConfigBoolean;
function configBoolean(config, key, defaultValue, path = '') {
    const value = config[key];
    if (value === null || value === undefined) {
        return defaultValue;
    }
    if (typeof value !== 'boolean') {
        throw new Error(`Unexpected value of type "${typeof value}" for config key "${path}${key}"`);
    }
    return value;
}
exports.configBoolean = configBoolean;
function configNumber(config, key, defaultValue, path = '') {
    const value = config[key];
    if (value === null || value === undefined) {
        return defaultValue;
    }
    if (typeof value !== 'number') {
        throw new Error(`Unexpected value of type "${typeof value}" for config key "${path}${key}"`);
    }
    return value;
}
exports.configNumber = configNumber;
function configObject(config, key, defaultValue, path = '') {
    const value = config[key];
    if (value === null || value === undefined) {
        return defaultValue;
    }
    if (typeof value !== 'object') {
        throw new Error(`Unexpected value of type "${typeof value}" for config key "${path}${key}"`);
    }
    return value;
}
exports.configObject = configObject;
