"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isOpenAPIServersContainer = exports.isOpenAPIV3PathItemObject = exports.isOpenAPIV2PathItemObject = exports.isOpenAPIv3SchemaObject = exports.isOpenAPIV3ExampleObject = exports.isOpenAPIV2ExampleObject = exports.isOpenAPIV3SecurityScheme = exports.isOpenAPIV2SecurityScheme = exports.isOpenAPIV3Document = exports.isOpenAPIV2Document = exports.isOpenAPIV3Operation = exports.isOpenAPIV2Operation = exports.isOpenAPIV3HeaderObject = exports.isOpenAPIV2HeaderObject = exports.isOpenAPIV2GeneralParameterObject = exports.isOpenAPIV3ResponseObject = exports.isOpenAPIV2ResponseObject = exports.isOpenAPIReferenceObject = void 0;
const types_1 = require("./types");
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
function isOpenAPIReferenceObject(ob) {
    return !!(ob.$ref);
}
exports.isOpenAPIReferenceObject = isOpenAPIReferenceObject;
function isOpenAPIV2ResponseObject(ob, specVersion) {
    return specVersion === types_1.CodegenSpecVersion.OpenAPIV2;
}
exports.isOpenAPIV2ResponseObject = isOpenAPIV2ResponseObject;
function isOpenAPIV3ResponseObject(ob, specVersion) {
    return specVersion === types_1.CodegenSpecVersion.OpenAPIV3;
}
exports.isOpenAPIV3ResponseObject = isOpenAPIV3ResponseObject;
function isOpenAPIV2GeneralParameterObject(ob, specVersion) {
    const anyOb = ob;
    return (specVersion === types_1.CodegenSpecVersion.OpenAPIV2 && anyOb.type !== undefined);
}
exports.isOpenAPIV2GeneralParameterObject = isOpenAPIV2GeneralParameterObject;
function isOpenAPIV2HeaderObject(ob, specVersion) {
    return specVersion === types_1.CodegenSpecVersion.OpenAPIV2;
}
exports.isOpenAPIV2HeaderObject = isOpenAPIV2HeaderObject;
function isOpenAPIV3HeaderObject(ob, specVersion) {
    return specVersion === types_1.CodegenSpecVersion.OpenAPIV3;
}
exports.isOpenAPIV3HeaderObject = isOpenAPIV3HeaderObject;
function isOpenAPIV2Operation(ob, specVersion) {
    return specVersion === types_1.CodegenSpecVersion.OpenAPIV2;
}
exports.isOpenAPIV2Operation = isOpenAPIV2Operation;
function isOpenAPIV3Operation(ob, specVersion) {
    return specVersion === types_1.CodegenSpecVersion.OpenAPIV3;
}
exports.isOpenAPIV3Operation = isOpenAPIV3Operation;
function isOpenAPIV2Document(ob) {
    const anyOb = ob;
    return typeof anyOb.swagger === 'string';
}
exports.isOpenAPIV2Document = isOpenAPIV2Document;
function isOpenAPIV3Document(ob) {
    const anyOb = ob;
    return typeof anyOb.openapi === 'string';
}
exports.isOpenAPIV3Document = isOpenAPIV3Document;
function isOpenAPIV2SecurityScheme(ob, specVersion) {
    return specVersion === types_1.CodegenSpecVersion.OpenAPIV2;
}
exports.isOpenAPIV2SecurityScheme = isOpenAPIV2SecurityScheme;
function isOpenAPIV3SecurityScheme(ob, specVersion) {
    return specVersion === types_1.CodegenSpecVersion.OpenAPIV3;
}
exports.isOpenAPIV3SecurityScheme = isOpenAPIV3SecurityScheme;
function isOpenAPIV2ExampleObject(ob, specVersion) {
    return specVersion === types_1.CodegenSpecVersion.OpenAPIV2;
}
exports.isOpenAPIV2ExampleObject = isOpenAPIV2ExampleObject;
function isOpenAPIV3ExampleObject(ob, specVersion) {
    return specVersion === types_1.CodegenSpecVersion.OpenAPIV3;
}
exports.isOpenAPIV3ExampleObject = isOpenAPIV3ExampleObject;
function isOpenAPIv3SchemaObject(ob, specVersion) {
    return specVersion === types_1.CodegenSpecVersion.OpenAPIV3;
}
exports.isOpenAPIv3SchemaObject = isOpenAPIv3SchemaObject;
function isOpenAPIV2PathItemObject(ob, specVersion) {
    return specVersion === types_1.CodegenSpecVersion.OpenAPIV2;
}
exports.isOpenAPIV2PathItemObject = isOpenAPIV2PathItemObject;
function isOpenAPIV3PathItemObject(ob, specVersion) {
    return specVersion === types_1.CodegenSpecVersion.OpenAPIV3;
}
exports.isOpenAPIV3PathItemObject = isOpenAPIV3PathItemObject;
function isOpenAPIServersContainer(ob) {
    const servers = ob.servers;
    return typeof servers === 'object' &&
        Array.isArray(servers) &&
        (servers.length === 0 || (typeof servers[0] === 'object' && typeof servers[0].url === 'string'));
}
exports.isOpenAPIServersContainer = isOpenAPIServersContainer;
