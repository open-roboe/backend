import { CodegenConfig, CodegenGenerator, CodegenGeneratorConstructor, CodegenState, CodegenDocument, CodegenInputDocument as CodegenInput, CodegenGeneratorContext } from '@openapi-generator-plus/types';
import { OpenAPI } from 'openapi-types';
export { createGeneratorContext } from './generators';
export * as idx from '@openapi-generator-plus/indexed-type';
/**
 * Construct a CodegenGenerator from the given constructor.
 * @param generatorConstructor
 */
export declare function constructGenerator(config: CodegenConfig, context: CodegenGeneratorContext, generatorConstructor: CodegenGeneratorConstructor): CodegenGenerator;
export declare function createCodegenState(generator: CodegenGenerator): CodegenState;
export declare function createCodegenInput(inputPath: string): Promise<CodegenInput>;
export declare function bundleCodegenInput(inputPath: string): Promise<OpenAPI.Document>;
/**
 * Return a CodegenDocument produced from the given CodegenState.
 * @param state
 */
export declare function createCodegenDocument(input: CodegenInput, state: CodegenState): CodegenDocument;
