"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toCodegenOperations = void 0;
const types_1 = require("@openapi-generator-plus/types");
const openapi_type_guards_1 = require("../openapi-type-guards");
const operations_1 = require("./operations");
const parameters_1 = require("./parameters");
const servers_1 = require("./servers");
const vendor_extensions_1 = require("./vendor-extensions");
function toCodegenOperations(path, pathItem, state) {
    const operations = [];
    function createCodegenOperation(path, method, operation, context) {
        if (!operation) {
            return;
        }
        const op = (0, operations_1.toCodegenOperation)(path, method, operation, context, state);
        operations.push(op);
    }
    const operationContext = {
        parameters: pathItem.parameters ? (0, parameters_1.toCodegenParameters)(pathItem.parameters, undefined, path, state) || undefined : undefined,
        summary: (0, openapi_type_guards_1.isOpenAPIV3PathItemObject)(pathItem, state.specVersion) ? pathItem.summary : undefined,
        description: (0, openapi_type_guards_1.isOpenAPIV3PathItemObject)(pathItem, state.specVersion) ? pathItem.description : undefined,
        vendorExtensions: (0, vendor_extensions_1.toCodegenVendorExtensions)(pathItem),
        servers: (0, servers_1.toCodegenServers)(pathItem),
    };
    createCodegenOperation(path, types_1.HttpMethods.GET, pathItem.get, operationContext);
    createCodegenOperation(path, types_1.HttpMethods.PUT, pathItem.put, operationContext);
    createCodegenOperation(path, types_1.HttpMethods.POST, pathItem.post, operationContext);
    createCodegenOperation(path, types_1.HttpMethods.DELETE, pathItem.delete, operationContext);
    createCodegenOperation(path, types_1.HttpMethods.OPTIONS, pathItem.options, operationContext);
    createCodegenOperation(path, types_1.HttpMethods.HEAD, pathItem.head, operationContext);
    createCodegenOperation(path, types_1.HttpMethods.PATCH, pathItem.patch, operationContext);
    if ((0, openapi_type_guards_1.isOpenAPIV3PathItemObject)(pathItem, state.specVersion)) {
        createCodegenOperation(path, types_1.HttpMethods.TRACE, pathItem.trace, operationContext);
    }
    return operations;
}
exports.toCodegenOperations = toCodegenOperations;
