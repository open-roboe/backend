"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toCodegenBooleanSchema = void 0;
const types_1 = require("@openapi-generator-plus/types");
const external_docs_1 = require("../external-docs");
const vendor_extensions_1 = require("../vendor-extensions");
const naming_1 = require("./naming");
const utils_1 = require("./utils");
function toCodegenBooleanSchema(apiSchema, naming, state) {
    if (apiSchema.type !== 'boolean') {
        throw new Error('Not a boolean schema');
    }
    const format = apiSchema.format;
    const vendorExtensions = (0, vendor_extensions_1.toCodegenVendorExtensions)(apiSchema);
    const nativeType = state.generator.toNativeType({
        type: apiSchema.type,
        format,
        schemaType: types_1.CodegenSchemaType.BOOLEAN,
        vendorExtensions,
    });
    const result = Object.assign(Object.assign(Object.assign(Object.assign({}, (0, naming_1.extractNaming)(naming)), { type: apiSchema.type, format: format || null, schemaType: types_1.CodegenSchemaType.BOOLEAN, nativeType, component: null }), (0, utils_1.extractCodegenSchemaCommon)(apiSchema, state)), { vendorExtensions, externalDocs: (0, external_docs_1.toCodegenExternalDocs)(apiSchema) });
    return result;
}
exports.toCodegenBooleanSchema = toCodegenBooleanSchema;
