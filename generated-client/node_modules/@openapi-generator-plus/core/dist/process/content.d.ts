import { CodegenContent, CodegenMediaType, CodegenSchemaPurpose, CodegenScope } from '@openapi-generator-plus/types';
import { OpenAPIV3 } from 'openapi-types';
import { InternalCodegenState } from '../types';
export declare function toCodegenContentArray(content: {
    [media: string]: OpenAPIV3.MediaTypeObject;
}, required: boolean, suggestedSchemaName: string, purpose: CodegenSchemaPurpose, scope: CodegenScope | null, state: InternalCodegenState): CodegenContent[];
export declare function findAllContentMediaTypes(contents: CodegenContent[] | undefined): CodegenMediaType[] | undefined;
/**
 * Apply information about encoding, and any required defaults for content encoding, to the given CodegenContent; modifying it.
 * @param content
 * @param encodingSpec
 * @param state
 * @returns
 */
export declare function applyCodegenContentEncoding(content: CodegenContent, encodingSpec: {
    [name: string]: OpenAPIV3.EncodingObject;
} | undefined, state: InternalCodegenState): void;
