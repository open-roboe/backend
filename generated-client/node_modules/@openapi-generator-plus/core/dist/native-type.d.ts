import { CodegenNativeType, CodegenNativeTypeTransformers, CodegenNativeTypeComposers } from '@openapi-generator-plus/types';
export declare class CodegenNativeTypeImpl implements CodegenNativeType {
    nativeType: string;
    serializedType: string;
    literalType: string;
    concreteType: string;
    parentType: string;
    componentType: CodegenNativeType | null;
    constructor(nativeType: string, additionalTypes?: {
        serializedType?: string;
        literalType?: string;
        concreteType?: string;
        parentType?: string;
        componentType?: CodegenNativeType | null;
    });
    toString(): string;
    equals(other: CodegenNativeType | undefined): boolean;
}
export declare class CodegenTransformingNativeTypeImpl implements CodegenNativeType {
    private actualWrapped;
    private transformers;
    constructor(wrapped: CodegenNativeType, transformers: CodegenNativeTypeTransformers);
    get nativeType(): string;
    get serializedType(): string;
    get literalType(): string;
    get concreteType(): string;
    get parentType(): string;
    get componentType(): CodegenNativeType | null;
    private get wrapped();
    equals(other: CodegenNativeType | undefined): boolean;
    toString(): string;
}
export declare class CodegenComposingNativeTypeImpl implements CodegenNativeType {
    private actualWrapped;
    private composers;
    constructor(wrapped: CodegenNativeType[], composers: CodegenNativeTypeComposers);
    get nativeType(): string;
    get serializedType(): string;
    get literalType(): string;
    get concreteType(): string;
    get parentType(): string;
    get componentType(): CodegenNativeType | null;
    private get wrapped();
    equals(other: CodegenNativeType | undefined): boolean;
    toString(): string;
    private compose;
}
