"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createConfig = void 0;
const fs_1 = require("fs");
const path_1 = __importDefault(require("path"));
const yaml_1 = __importDefault(require("yaml"));
const utils_1 = require("@openapi-generator-plus/core/dist/utils");
async function loadConfig(path) {
    const configContents = await fs_1.promises.readFile(path, {
        encoding: 'utf-8',
    });
    if (path.endsWith('.yml') || path.endsWith('.yaml')) {
        return yaml_1.default.parse(configContents, {
            prettyErrors: true,
        });
    }
    else {
        return JSON.parse(configContents);
    }
}
async function createConfig(commandLineOptions, loadConfigFunction = loadConfig) {
    const configPath = commandLineOptions.config;
    if (configPath) {
        const config = await loadConfigFunction(configPath);
        config.configPath = configPath;
        if (config.outputPath) {
            config.outputPath = path_1.default.resolve(path_1.default.dirname(configPath), config.outputPath);
        }
        if (config.inputPath && !(0, utils_1.isURL)(config.inputPath)) {
            config.inputPath = path_1.default.resolve(path_1.default.dirname(configPath), config.inputPath);
        }
        if (commandLineOptions.generator) {
            config.generator = commandLineOptions.generator;
        }
        if (commandLineOptions.output) {
            config.outputPath = commandLineOptions.output;
        }
        if (commandLineOptions._.length) {
            config.inputPath = commandLineOptions._[0];
        }
        return config;
    }
    else {
        return {
            generator: commandLineOptions.generator || '',
            outputPath: commandLineOptions.output || '',
            inputPath: commandLineOptions._[0],
        };
    }
}
exports.createConfig = createConfig;
//# sourceMappingURL=config.js.map