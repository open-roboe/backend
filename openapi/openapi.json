{"openapi": "3.0.2", "info": {"title": "roboe backend", "description": "\n### backend server for the roboapp, connecting roboe with the android clients\n", "version": "0.0.1"}, "paths": {"/api/account/": {"get": {"tags": ["account"], "summary": "Get Logged User", "description": "Returns account info, requires authentication", "operationId": "get_logged_user_api_account__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserResponse"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/account/admin": {"get": {"tags": ["account"], "summary": "Get Logged Admin User", "description": "Returns account info, requires authentication in an admin account.\nUsed to test if the current account is admin", "operationId": "get_logged_admin_user_api_account_admin_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserResponse"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/account/super_admin": {"get": {"tags": ["account"], "summary": "Get Logged Super Admin User", "description": "Returns account info, requires authentication in a super admin account.\nUsed to test if the current account is super admin", "operationId": "get_logged_super_admin_user_api_account_super_admin_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserResponse"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/account/register": {"post": {"tags": ["account"], "summary": "Register", "description": "TODO: require super admin permissions\n\nRegister a new user. Requires authentication in a super admin account", "operationId": "register_api_account_register_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/auth": {"post": {"tags": ["account"], "summary": "Login", "operationId": "login_api_account_auth_post", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_login_api_account_auth_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthToken"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/course/": {"get": {"tags": ["course"], "summary": "Get All Courses", "description": "get all courses", "operationId": "get_all_courses_api_course__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Get All Courses Api Course  Get", "type": "array", "items": {"$ref": "#/components/schemas/CourseResponse"}}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "put": {"tags": ["course"], "summary": "Update Course", "description": "update a course\n\nnote: course.name, jury.id and buoy.id are identifiers and cannot be changed", "operationId": "update_course_api_course__put", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CourseUpdate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CourseResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "post": {"tags": ["course"], "summary": "Add Course", "description": "Add a course, with its jury and buoys.\n\nCourses are the same thing as Regattas. It's just a synonym", "operationId": "add_course_api_course__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CourseCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CourseResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/course/{course_name}": {"delete": {"tags": ["course"], "summary": "Update Course", "operationId": "update_course_api_course__course_name__delete", "parameters": [{"required": true, "schema": {"title": "Course Name", "type": "string"}, "name": "course_name", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/course/{course_name}/buoy/{buoy_id}/assign_roboa": {"post": {"tags": ["course"], "summary": "Buoy Assign Roboa", "description": "assign a roboa to a buoy. As of now it is not possible to assign a roboa to the jury buoy\n\nThis operation will not cause the roboa to move!\nIf you want to move the roboa use the roboa/move endpoint", "operationId": "buoy_assign_roboa_api_course__course_name__buoy__buoy_id__assign_roboa_post", "parameters": [{"required": true, "schema": {"title": "Course Name", "type": "string"}, "name": "course_name", "in": "path"}, {"required": true, "schema": {"title": "Buoy Id", "type": "integer"}, "name": "buoy_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoboaGet"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/polling/roboa": {"post": {"tags": ["polling"], "summary": "Poll Roboa Update", "description": "Polling endpoint, called repeatedly by an authenticated roboa to send its metrics, and receive back commands\n\nThis endpoint updates the roboa last_update timestamp", "operationId": "poll_roboa_update_api_polling_roboa_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PollRoboaUpdate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"HTTPBasic": []}]}}, "/api/polling/user": {"post": {"tags": ["polling"], "summary": "Poll User Update", "description": "Polling endpoint, called repeatedly by an authenticated user to send its metrics\nand get data updates\n\nThis endpoint updates the user last_update timestamp", "operationId": "poll_user_update_api_polling_user_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PollUserUpdate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PollResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/polling/": {"get": {"tags": ["polling"], "summary": "Poll", "description": "Polling endpoint, called repeatedly by an authenticated user to get data updates.\nThis endpoint does not update user metrics", "operationId": "poll_api_polling__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PollResponse"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/roboa/": {"get": {"tags": ["roboa"], "summary": "Get All Roboas", "description": "get all roboas", "operationId": "get_all_roboas_api_roboa__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Get All Roboas Api Roboa  Get", "type": "array", "items": {"$ref": "#/components/schemas/RoboaResponse"}}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "post": {"tags": ["roboa"], "summary": "Add Roboa", "description": "Register a new roboa in the system", "operationId": "add_roboa_api_roboa__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoboaCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoboaResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/roboa/{name}": {"delete": {"tags": ["roboa"], "summary": "Delete Roboa", "description": "TOIMPLEMENT\ndelete a roboa", "operationId": "delete_roboa_api_roboa__name__delete", "parameters": [{"required": true, "schema": {"title": "Name", "type": "string"}, "name": "name", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/roboa/{name}/move_to_buoy": {"put": {"tags": ["roboa"], "summary": "Move To Assigned Buoy", "description": "TOIMPLEMENT\nset the target coordinates of the specified roboa,\ncausing it to move to the location", "operationId": "move_to_assigned_buoy_api_roboa__name__move_to_buoy_put", "parameters": [{"required": true, "schema": {"title": "Name", "type": "string"}, "name": "name", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}}, "components": {"schemas": {"AuthToken": {"title": "AuthToken", "required": ["access_token", "token_type"], "type": "object", "properties": {"access_token": {"title": "Access Token", "type": "string"}, "token_type": {"title": "Token Type", "type": "string"}}}, "Body_login_api_account_auth_post": {"title": "Body_login_api_account_auth_post", "required": ["username", "password"], "type": "object", "properties": {"grant_type": {"title": "Grant Type", "pattern": "password", "type": "string"}, "username": {"title": "Username", "type": "string"}, "password": {"title": "Password", "type": "string"}, "scope": {"title": "Scope", "type": "string", "default": ""}, "client_id": {"title": "Client Id", "type": "string"}, "client_secret": {"title": "Client Secret", "type": "string"}}}, "Buoy": {"title": "Buoy", "required": ["id", "lat", "lon", "course_id"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "description": {"title": "Description", "type": "string", "default": ""}, "color": {"title": "Color", "type": "integer", "default": 0}, "lat": {"title": "Lat", "type": "integer"}, "lon": {"title": "Lon", "type": "integer"}, "course_id": {"title": "Course Id", "type": "string"}}}, "BuoyCreate": {"title": "BuoyCreate", "required": ["id", "lat", "lon"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "description": {"title": "Description", "type": "string"}, "color": {"title": "Color", "type": "integer"}, "lat": {"title": "Lat", "type": "integer"}, "lon": {"title": "Lon", "type": "integer"}}}, "BuoyUpdate": {"title": "BuoyUpdate", "required": ["id"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "description": {"title": "Description", "type": "string"}, "color": {"title": "Color", "type": "integer"}, "lat": {"title": "Lat", "type": "integer"}, "lon": {"title": "Lon", "type": "integer"}}}, "CourseCreate": {"title": "CourseCreate", "required": ["name", "type", "jury", "buoys"], "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "type": {"title": "Type", "type": "string"}, "compass_degrees": {"title": "Compass Degrees", "type": "integer"}, "start_line_len": {"title": "Start Line Len", "type": "integer"}, "break_distance": {"title": "Break Distance", "type": "integer"}, "bottom_buoy": {"title": "Bottom Buoy", "type": "integer"}, "gate": {"title": "Gate", "type": "boolean"}, "second_mark_distance": {"title": "Second Mark Distance", "type": "integer"}, "jury": {"$ref": "#/components/schemas/JuryCreate"}, "buoys": {"title": "Buoys", "type": "array", "items": {"$ref": "#/components/schemas/BuoyCreate"}}}}, "CourseResponse": {"title": "CourseResponse", "required": ["name", "type", "creation_date", "jury", "buoys"], "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "type": {"title": "Type", "type": "string"}, "compass_degrees": {"title": "Compass Degrees", "type": "integer"}, "start_line_len": {"title": "Start Line Len", "type": "integer"}, "break_distance": {"title": "Break Distance", "type": "integer"}, "bottom_buoy": {"title": "Bottom Buoy", "type": "integer"}, "gate": {"title": "Gate", "type": "boolean"}, "second_mark_distance": {"title": "Second Mark Distance", "type": "integer"}, "creation_date": {"title": "Creation Date", "type": "integer"}, "jury": {"$ref": "#/components/schemas/JuryResponse"}, "buoys": {"title": "Buoys", "type": "array", "items": {"$ref": "#/components/schemas/Buoy"}}}}, "CourseUpdate": {"title": "CourseUpdate", "required": ["name", "jury", "buoys"], "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "type": {"title": "Type", "type": "string"}, "compass_degrees": {"title": "Compass Degrees", "type": "integer"}, "start_line_len": {"title": "Start Line Len", "type": "integer"}, "break_distance": {"title": "Break Distance", "type": "integer"}, "bottom_buoy": {"title": "Bottom Buoy", "type": "integer"}, "gate": {"title": "Gate", "type": "boolean"}, "second_mark_distance": {"title": "Second Mark Distance", "type": "integer"}, "jury": {"$ref": "#/components/schemas/JuryUpdate"}, "buoys": {"title": "Buoys", "type": "array", "items": {"$ref": "#/components/schemas/BuoyUpdate"}}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "JuryCreate": {"title": "JuryCreate", "required": ["lat", "lon"], "type": "object", "properties": {"description": {"title": "Description", "type": "string"}, "color": {"title": "Color", "type": "integer"}, "lat": {"title": "Lat", "type": "integer"}, "lon": {"title": "Lon", "type": "integer"}}}, "JuryResponse": {"title": "JuryResponse", "required": ["lat", "lon"], "type": "object", "properties": {"description": {"title": "Description", "type": "string", "default": ""}, "color": {"title": "Color", "type": "integer", "default": 0}, "lat": {"title": "Lat", "type": "integer"}, "lon": {"title": "Lon", "type": "integer"}}}, "JuryUpdate": {"title": "JuryUpdate", "type": "object", "properties": {"description": {"title": "Description", "type": "string"}, "color": {"title": "Color", "type": "integer"}, "lat": {"title": "Lat", "type": "integer"}, "lon": {"title": "Lon", "type": "integer"}}}, "PollResponse": {"title": "PollResponse", "required": ["courses", "users", "roboas"], "type": "object", "properties": {"courses": {"title": "Courses", "type": "array", "items": {"$ref": "#/components/schemas/CourseResponse"}}, "users": {"title": "Users", "type": "array", "items": {"$ref": "#/components/schemas/UserResponse"}}, "roboas": {"title": "Roboas", "type": "array", "items": {"$ref": "#/components/schemas/RoboaResponse"}}}}, "PollRoboaUpdate": {"title": "PollRoboaUpdate", "required": ["lat", "lon"], "type": "object", "properties": {"lat": {"title": "Lat", "type": "number"}, "lon": {"title": "Lon", "type": "number"}}}, "PollUserUpdate": {"title": "PollUserUpdate", "required": ["lat", "lon"], "type": "object", "properties": {"lat": {"title": "Lat", "type": "number"}, "lon": {"title": "Lon", "type": "number"}}}, "RoboaCreate": {"title": "RoboaCreate", "required": ["name", "token"], "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "token": {"title": "Token", "type": "string"}}}, "RoboaGet": {"title": "RoboaGet", "required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "type": "string"}}}, "RoboaResponse": {"title": "RoboaResponse", "required": ["name", "last_update"], "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "last_update": {"title": "Last Update", "type": "integer"}, "lat": {"title": "Lat", "type": "number", "default": 0}, "lon": {"title": "Lon", "type": "number", "default": 0}, "eta": {"title": "Eta", "type": "integer", "default": 0}, "assigned_buoy": {"title": "Assigned Buoy", "type": "integer"}, "target_lat": {"title": "Target Lat", "type": "number", "default": 0}, "target_lon": {"title": "Target Lon", "type": "number", "default": 0}}}, "UserCreate": {"title": "UserCreate", "required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string"}, "password": {"title": "Password", "type": "string"}, "admin": {"title": "Admin", "type": "boolean", "default": false}, "super_admin": {"title": "Super Admin", "type": "boolean", "default": false}}}, "UserResponse": {"title": "UserResponse", "required": ["username", "last_update"], "type": "object", "properties": {"username": {"title": "Username", "type": "string"}, "admin": {"title": "Admin", "type": "boolean", "default": true}, "super_admin": {"title": "Super Admin", "type": "boolean", "default": false}, "last_update": {"title": "Last Update", "type": "integer"}, "lat": {"title": "Lat", "type": "number", "default": 0}, "lon": {"title": "Lon", "type": "number", "default": 0}, "course_id": {"title": "Course Id", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"type": "string"}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/api/account/auth"}}}, "HTTPBasic": {"type": "http", "scheme": "basic"}}}}
